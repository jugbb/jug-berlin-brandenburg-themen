jOOQ: Get Back in Control of Your SQL
=================

Checkliste
----------

**Raum angefragt**: ok

**Raum bestätigt**: ok

**Alle Referenten bestätigt**: ok

**Einladung per XING**: offen

**Termin im Heise Kalender**: offen

**Kurztext zu Referenten**: ok

**Themenbeschreibung**: ok

**Google-Kalender**: offen

**Blogeintrag**: offen

**Folien bekommen**: offen

**Folien online**: offen

Zeitpunkt der Veranstaltung
---------------------------

**Datum**:  10.12.2013

**Anfang**: 18:30 Uhr

**Ende**: 21:00 Uhr

Veranstaltungsort
-----------------

**Bezeichnung**: Zanox AG

**Adresse**: ZANOX AG, Stralauer Allee 2, 10245 Berlin

**Max. Teilnehmer**: 70

Referenten
----------

Lukas Eder 
~~~~~~~ 

Lukas Eder ist ein enthusiastischer Java und SQL
Entwickler und hat sich in den letzten Jahren im E-Banking Bereich
mit viel Freude vertieft mit der Oracle Datenbank auseinandergesetzt.
Sein Wissen über SQL hat er stets in meine Open Source Software
gesteckt, mit er nun seine eigene Firma gegründet habe. Er
hofft, damit die Java/SQL Schnittstelle zu revolutionieren.

Thema bzw. Themen
-----------------

jOOQ: Get Back in Control of Your SQL
~~~~~~~~~~~~~~~~~~~
**Sprecher**: Lukas Eder

SQL hat sich lange als mächtige und ausdrucksstarke Sprache für 
Abfragen auf relationale Datenbanken bewährt. SQL ist etabliert, 
standardisiert und kaum durch alternative Abfragesprachen 
konkurriert. Trotzdem gibt es seit JDBC wenig relevante Schritte 
zur besseren Integration von SQL in Java. Die Aufmerksamkeit war 
auf Objekt-relationales Mapping und Sprach-Abstraktionen von 
höherem Grad gerichtet, so wie OQL, HQL, JPQL, CriteriaQuery. 
In der Zwischenzeit wurden diese Abstraktionen beinahe so 
komplex wie SQL selbst, trotz der Kopfschmerzen, die sie 
einem DBA bereiten, der das generierte SQL fast 
nicht korrigieren kann.

jOOQ ist ein dual lizenziertes Open Source Produkt, welches 
diese Lücke füllt. Es implementiert SQL selbst als interne 
domänen-spezifische Sprache in Java, was die typsichere Erstellung 
und Ausführung von SQL Befehlen von beliebiger Komplexität 
erlaubt. Dies beinhaltet verschachtelte Selects, 
"derived tables", "joins", "semi-joins", "anti-joins", 
"self-joins", "aliasing", sowie viele hersteller-spezifische 
Erweiterungen wie "stored procedures", "arrays", 
"user defined types", rekursives SQL, "grouping sets", 
"pivot tables", Fensterfunktionen und viele weitere 
OLAP Features. jOOQ beinhaltet einen Source-Code Generator, 
der es erlaubt, kompilierende Abfragen in einer modernen 
IDE wie Eclipse sehr effizient zu formulieren.

jOOQ ist eine gute Wahl in Java Applikationen, in denen SQL und
die spezifische relationale Datenbank wirklich wichtig sind. 
Es ist eine Alternative, wenn JPA/Hibernate zuviel Abstraktion 
bietet, JDBC zu wenig. Und es zeigt, wie eine domänen-spezifische
Sprache die Produktivität steigern kann, wenn sie SQL 
in Java internalisiert.



